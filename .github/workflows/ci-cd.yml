name: CI & CD

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  osv-scanner:
    name: OSV Scan Vulnerabilities
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          check-latest: true

      - name: Check out code
        uses: actions/checkout@v3

      - name: Lint Go Code
        run: |
          go version
          go install github.com/google/osv-scanner/cmd/osv-scanner@v1
          make osv

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          check-latest: true

      - name: Check out code
        uses: actions/checkout@v3

      - name: Lint Go Code
        run: |
          go version
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.53.3
          make lint

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - osv-scanner
      - lint
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          check-latest: true

      - name: Check out code
        uses: actions/checkout@v3

      - name: Build Golang
        run: |
          go version
          make build

  test:
    name: Test
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          check-latest: true

      - name: Check out code
        uses: actions/checkout@v3

      - name: Build Golang
        run: |
          go version
          make test

  hub-docker:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          file: docker/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_IMAGE }}:latest
  
#  deployment:
#    name: Publish to Docker Hub
#    runs-on: ubuntu-latest
#    needs:
#      - test
#    steps:
#      - name: Push to Docker Hub
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          key: ${{ secrets.KEY }}
#          port: ${{ secrets.PORT }}
#          script: |
#            whoami

